#include<bits/stdc++.h>
  using namespace std;
  #define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
  #define endl "\n"
  #define ll long long
  #define int long long
  #define double long double
  #define max(a,b) (a>b?a:b)
  #define min(a,b) (a<b?a:b)
  #define mp make_pair
  #define pb push_back
  #define inf INT_MAX
  #define f first
  #define s second
  #define trace1(x)                cerr<<#x<<": "<<x<<endl
  #define trace2(x, y)             cerr<<#x<<": "<<x<<" | "<<#y<<": "<<y<<endl
  #define trace3(x, y, z)          cerr<<#x<<":" <<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl
  #define trace4(a, b, c, d)       cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl
  #define trace5(a, b, c, d, e)    cerr<<#a<<": "<<a<<" | "<<#b<< ": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<endl
  #define trace6(a, b, c, d, e, f) cerr<<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<< ": "<<e<<" | "<<#f<<": "<<f<<endl
  #define cases int testcases;cin>>testcases; while(testcases--)
  #define all(v) v.begin(), v.end()
  #define mod INT_MAX 
  const int MOD=1e9+7;
  const int N=2e5+2;
 
  /*Company Queries I
    Binary Lifting */
  int n,depth[N],anc[N][19],q; //19 coz, in sparse or ancestor table[i][j], maximum depth of levels is ceil[log2(N)]
  vector<int> adj[N];
 
  void dfs(int u = 0,int p=-1){
    anc[u][0] = p;
    for(int i =1;i<19;i++)
      anc[u][i] = ~anc[u][i-1] ? anc[anc[u][i-1]][i-1] : -1;
    for(int v:adj[u])
    {
      if(v==p) continue;
      depth[v] =  depth[u] + 1;
      dfs(v,u);
    }
  }
 
 
 
 
  int32_t main()
  {
    /*#ifndef ONLINE_JUDGE
       freopen("in.txt","r",stdin);
       freopen("out.txt","w",stdout);
    #endif*/
       IOS
       cin>>n>>q;
       int x,k;
       for(int i = 1; i <n;i++)
       {
        cin>>x;
        --x;
        adj[x].push_back(i);
       }
       dfs();
       
       while(q--)
       {
        cin>>x>>k;
        --x;
        if(depth[x] < k)
        {
          cout<<"-1"<<endl;
        }
        else
        {
          //this loop to binary lift
          for(int i = 18; ~i ; i--)
          {
           // trace3(i,(k>>i),(i&1));
            if(k>>i&1)
              x = anc[x][i];
          }
          if(x!=-1)
            cout<<x+1<<endl;
          else
            cout<<x<<endl;
        }
       }
       
        return 0;
  }